N=100; J=10000; b0=1; b1=2
for (i in 1:J) {
x=rnorm(N)
e=rnorm(N)
y = b0 + b1*x + e
missing1 = x < 1
missing1 = y > 1.5
x <- x[missing1]
y <- y[missing1]
tot <- tot + coef(summary(lm(y ~ x)))[2,1]
}
tot/J
prettier dendrograms#
myplclust <- function( hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1,...){#
  ## modifiction of plclust for plotting hclust objects *in colour*!#
  ## Copyright Eva KF Chan 2009#
  ## Arguments:#
  ##    hclust:    hclust object#
  ##    lab:        a character vector of labels of the leaves of the tree#
  ##    lab.col:    colour for the labels; NA=default device foreground colour#
  ##    hang:     as in hclust & plclust#
  ## Side effect:#
  ##    A display of hierarchical cluster with coloured leaf labels.#
  y <- rep(hclust$height,2); x <- as.numeric(hclust$merge)#
  y <- y[which(x<0)]; x <- x[which(x<0)]; x <- abs(x)#
  y <- y[order(x)]; x <- x[order(x)]#
  plot( hclust, labels=FALSE, hang=hang, ... )#
  text( x=x, y=y[hclust$order]-(max(hclust$height)*hang),#
        labels=lab[hclust$order], col=lab.col[hclust$order], #
        srt=90, adj=c(1,0.5), xpd=NA, ... )#
}
ability <- read.csv("~/Desktop/ability.csv")
head(ability)
ability.hc <- hclust(ability)
is.na(ability)
sum(is.na(ability))
class(ability)
str(ability)
length(ability)
size(abilit)
size(ability)
dim(ability)
54*903
hclust(ability)
distxy <- dist(ability)
hClustering <- hclust(distxy)
plot(hClustering)
plot(hClustering, rotate=TRUE)
plot(hClustering, hang=-1)
distxy <- dist(ability[1:100,])#
hClustering <- hclust(distxy)#
plot(hClustering, hang=-1)
names(ability)
ability <- read.csv("~/Desktop/ability.csv")#
distxy <- dist(ability[c(-1,-2)])#
rownames(distxy) <- ability[,1]
ability <- read.csv("~/Desktop/ability.csv")#
rownames(ability) <- ability[,1]#
ability <- ability[c(-1,-2),]
distxy <- dist(ability[c(-1,-2)])#
hClustering <- hclust(distxy)#
plot(hClustering, hang=-1)
ability <- read.csv("~/Desktop/ability.csv")#
rownames(ability) <- ability[,1]#
ability <- ability[1:100,c(-1,-2)]
ability <- read.csv("~/Desktop/ability.csv")#
rownames(ability) <- ability[,1]#
ability <- ability[1:50,c(-1,-2)]#
distxy <- dist(ability[c(-1,-2)])#
hClustering <- hclust(distxy)#
plot(hClustering, hang=-1)
ability <- read.csv("~/Desktop/ability.csv")#
rownames(ability) <- ability[,"Title"]#
ability <- ability[1:50,c(-1,-2)]#
distxy <- dist(ability[c(-1,-2)])#
hClustering <- hclust(distxy)#
plot(hClustering, hang=-1)
install.packages('ggdendro')
library(ggdendro)
library(ggplot2)
hc <- hclust(dist(ability), "ave")
help(hclust)
hc <- hclust(dist(ability), "ave")#
dhc <- as.dendrogram(hc)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
p <- ggplot(segment(ddata)) +#
+ geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +#
+ coord_flip() + scale_y_reverse(expand=c(0.2, 0))#
print(p)
p <- ggplot(segment(ddata)) +#
     geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +#
     coord_flip() + scale_y_reverse(expand=c(0.2, 0))
print(p)
p + coord_flip() + theme_dendro()
p + geom_text(aes(x = x, y = y, label = label, angle = -90, hjust = 0), data= label(ddata)) +#
  scale_y_continuous(expand = c(0.3, 0))
ggdendrogram(ddata)
ggdendrogram(ddata) + coord_flip()
help(coord_flip)
ggdendrogram(ddata) + coord_flip() + scale_x_reverse()
help(ggdendrogram)
ggdendrogram(ddata, rotate=TRUE)
ggdendrogram(ddata, rotate=TRUE, hang=0.1)
ggdendrogram(ddata, rotate=TRUE, hang=0)
pmatch("econ", rownames(ability))
pmatch("econ", rownames(ability), dup=TRUE)
pmatch("econ", rownames(ability), duplicates.ok=TRUE)
pmatch("con", rownames(ability), duplicates.ok=TRUE)
grep("econ", rownames(ability), ignore.case=TRUE)
ability[grep("econ", rownames(ability), ignore.case=TRUE), 1]
ability[grep("econ", rownames(ability), ignore.case=TRUE), 1:2]
ability <- read.csv("~/Desktop/ability.csv")#
rownames(ability) <- ability[,"Title"]
ability <- ability[,c(-1,-2)]
grep("econ", rownames(ability), ignore.case=TRUE)
grep("econom", rownames(ability), ignore.case=TRUE)
grep("econ", rownames(ability), ignore.case=TRUE)
econ <- ability[grep("econ", rownames(ability), ignore.case=TRUE),]
distxy <- dist(econ)
hClustering <- hclust(distxy)
plot(hClustering, hang=-1)
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")
ggdendrogram(ddata) + coord_flip()
ggdendrogram(ddata, rotate=TRUE)
plot(hClustering, rotate=TRUE)
econ <- ability[grep("econo", rownames(ability), ignore.case=TRUE),]
distxy <- dist(econ)#
hClustering <- hclust(distxy)
plot(hClustering, hang=0)
econ <- ability[grep(c("builder","econo"), rownames(ability), ignore.case=TRUE),]
sapply
help(sapply)
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=TRUE))
as.vector(sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=TRUE)))
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=TRUE), simplify=TRUE)
help(sapply)
xs <- sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=TRUE))
simplify2array(xs)
replicate(c("builder","economist"), function(pat) grep(pat, rownames(ability)))
lapply(c("builder","economist"), function(pat) grep(pat, rownames(ability)))
apply(c("builder","economist"), function(pat) grep(pat, rownames(ability)))
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability)))
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability)), simplify=T)
rownames(ability)
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability)), simplify=T)
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability)), simplify=T)
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=T), simplify=T)
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=T), simplify=T, higher=T)
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=T), simplify=T, higher=F)
sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=T), simplify=T)
r<-sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=T), simplify=T)
simplify2array(r,higher=F)
unlist(r)
r<-sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=T))
r
unlist(r)
unlist(sapply(c("builder","economist"), function(pat) grep(pat, rownames(ability), ignore.case=T)))
subset <- unlist(sapply(c("builder","economist","dentist","retail"), #
			function(pat) grep(pat, rownames(ability), ignore.case=T)))
subset
distxy <- dist(subset)#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)#
#
ggdendrogram(ddata, rotate=TRUE)
ability[subset,]
distxy <- dist(ability[subset,])#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)#
#
ggdendrogram(ddata, rotate=TRUE)
distxy <- dist(ability[subset,])#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)#
#
ggdendrogram(ddata)
mypclust(hClustering)
myplclust <- function( hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1,...){#
  ## modifiction of plclust for plotting hclust objects *in colour*!#
  ## Copyright Eva KF Chan 2009#
  ## Arguments:#
  ##    hclust:    hclust object#
  ##    lab:        a character vector of labels of the leaves of the tree#
  ##    lab.col:    colour for the labels; NA=default device foreground colour#
  ##    hang:     as in hclust & plclust#
  ## Side effect:#
  ##    A display of hierarchical cluster with coloured leaf labels.#
  y <- rep(hclust$height,2); x <- as.numeric(hclust$merge)#
  y <- y[which(x<0)]; x <- x[which(x<0)]; x <- abs(x)#
  y <- y[order(x)]; x <- x[order(x)]#
  plot( hclust, labels=FALSE, hang=hang, ... )#
  text( x=x, y=y[hclust$order]-(max(hclust$height)*hang),#
        labels=lab[hclust$order], col=lab.col[hclust$order], #
        srt=90, adj=c(1,0.5), xpd=NA, ... )#
}
mypclust(hClustering)
myplclust(hClustering)
ability <- read.csv("~/Desktop/skills.csv")
subset <- unlist(sapply(c("builder","economist","dentist","retail"), #
			function(pat) grep(pat, rownames(ability), ignore.case=T)))#
#
distxy <- dist(ability[subset,])#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)
ggdendrogram(ddata)
ggdendrogram(ddata, rotate=T)
myplclust(hClustering)
ability <- read.csv("~/Desktop/skills.csv")
rownames(ability) <- ability[,"Title"]
ability <- ability[,c(-1,-2)]#
distxy <- dist(ability[c(-1,-2)])#
hClustering <- hclust(distxy)#
plot(hClustering, hang=-1)
subset <- unlist(sapply(c("builder","economist","dentist","retail"), #
			function(pat) grep(pat, rownames(ability), ignore.case=T)))#
distxy <- dist(ability[subset,])#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")
plot(hClustering, hang=0)
ggdendrogram(ddata, rotate=T)#
#
myplclust(hClustering)
help(sample)
subset <- sample(ability, size=20)
distxy <- dist(ability[subset,])#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")
plot(hClustering, hang=0)
subset <- sample(ability, size=20)#
distxy <- dist(ability[subset,])#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)
class(subset)
distxy <- dist(ability[subset,])
ability_sub <- sample(ability, size=20)#
distxy <- dist(ability_sub)#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)
ability_sub <- sample(ability, size=20)
ability_sub
view(Ability_sub)
View(Ability_sub)
dim(ability_sub)
subset <- sample(1:nrow(ability), size=20)#
ability_sub <- ability[subset,]
distxy <- dist(ability_sub)
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)
set.seed(1)#
subset <- sample(1:nrow(ability), size=20)#
ability_sub <- ability[subset,]#
distxy <- dist(ability_sub)#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0)
plot(hClustering, hang=0, main="Random sample of 2 occupations")#
mtext("Clustered by skills")
myplclust(hClustering)
plot(hClustering, hang=0, main="Random sample of 2 occupations")#
mtext("Clustered by skills")
Sys.getenv("R_USER")
plot(hClustering, hang=0, main="Random sample of 2 occupations", cex=0.8)#
mtext("Clustered by skills")
plot(hClustering, hang=0, main="Random sample of 2 occupations", cex=0.5)#
mtext("Clustered by skills")
plot(hClustering, hang=0, main="Random sample of 2 occupations", label.cex=0.5)
plot(hClustering, hang=0, main="Random sample of 2 occupations", cex=0.5)
mtext("Clustered by skills")
plot(hClustering, hang=0, main="Random sample of 2 occupations", cex.lab=0.5)#
mtext("Clustered by skills")
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5, family.lab='Arial')
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5, family='Arial')
set.seed(1)#
subset <- sample(1:nrow(ability), size=40)#
ability_sub <- ability[subset,]#
distxy <- dist(ability_sub)#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5, family='Arial')#
mtext("Clustered by skills")
set.seed(2)#
subset <- sample(1:nrow(ability), size=40)#
ability_sub <- ability[subset,]#
distxy <- dist(ability_sub)#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5, family='Arial')#
mtext("Clustered by skills")
pdf("dendro.pdf", height=12, width=8)#
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5, family='Arial')#
mtext("Clustered by skills")#
dev.off()
getwd()
setwd("/Users/acooper/School/polarization/doc")
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5)#
mtext("Clustered by skills")
pdf("dendro.pdf", height=12, width=8)#
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5)#
mtext("Clustered by skills")#
dev.off()
plot(hClustering, hang=0, main="Random sample of 2 occupations", #
	cex.lab=0.5)
plot(hClustering, hang=1, main="Random sample of 2 occupations", #
	cex.lab=0.5)
pdf("dendro.pdf", height=12, width=8)#
plot(hClustering, hang=1, main="Random sample of 2 occupations", #
	cex.lab=0.5)#
mtext("Clustered by skills")#
dev.off()
set.seed(1)#
subset <- sample(1:nrow(ability), size=30)#
ability_sub <- ability[subset,]#
distxy <- dist(ability_sub)#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")
plot(hClustering, hang=1, main="Random sample of 2 occupations", #
	cex.lab=0.5)#
mtext("Clustered by skills")
pdf("dendro.pdf", height=12, width=8)#
plot(hClustering, hang=1, main="Random sample of 2 occupations", #
	cex.lab=0.5)#
mtext("Clustered by skills")#
dev.off()
subset <- sample(1:nrow(ability), size=40)#
ability_sub <- ability[subset,]#
distxy <- dist(ability_sub)#
hClustering <- hclust(distxy)#
dhc <- as.dendrogram(hClustering)#
# Rectangular lines#
ddata <- dendro_data(dhc, type="rectangle")#
#
pdf("dendro.pdf", height=12, width=8)#
plot(hClustering, hang=1, main="Random sample of 40 occupations", #
	cex.lab=0.5)#
mtext("Clustered by skills")#
dev.off()
help(pdf)
for (seed in 1:10) {#
	set.seed(1)#
	subset <- sample(1:nrow(ability), size=40)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy)#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=1, main="Random sample of 40 occupations", #
		cex.lab=0.5)#
	mtext("Clustered by skills")#
}
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:10) {#
	set.seed(1)#
	subset <- sample(1:nrow(ability), size=40)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy)#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=1, main="Random sample of 40 occupations", #
		cex.lab=0.5)#
	mtext("Clustered by skills")#
}#
dev.off()
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:10) {#
	set.seed(seed)#
	subset <- sample(1:nrow(ability), size=40)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy)#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=1, main="Random sample of 40 occupations", #
		cex.lab=0.5)#
	mtext("Clustered by skills")#
}#
dev.off()
mtext(paste("Clustered by skills, seed=",seed))
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:2) {#
	set.seed(seed)#
	subset <- sample(1:nrow(ability), size=40)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy)#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=1, main="Random sample of 30 occupations", #
		cex.lab=0.5)#
	mtext(paste("Clustered by skills, seed=",seed))#
}#
dev.off()
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:2) {#
	set.seed(seed)#
	subset <- sample(1:nrow(ability), size=30)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy)#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=1, main="Random sample of 30 occupations", #
		cex.lab=0.5)#
	mtext(paste("Clustered by skills, seed=",seed))#
}#
dev.off()
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:2) {#
	set.seed(seed)#
	subset <- sample(1:nrow(ability), size=30)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy, "mean")#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=1, main="Random sample of 30 occupations", #
		cex.lab=0.5)#
	mtext(paste("Clustered by skills, seed=",seed))#
}#
dev.off()
help(hclust)
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:2) {#
	set.seed(seed)#
	subset <- sample(1:nrow(ability), size=30)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy, "median")#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=1, main="Random sample of 30 occupations", #
		cex.lab=0.5)#
	mtext(paste("Clustered by skills, seed=",seed))#
}#
dev.off()
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:2) {#
	set.seed(seed)#
	subset <- sample(1:nrow(ability), size=30)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy, "median")#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=0.1, main="Random sample of 30 occupations", #
		cex.lab=0.5)#
	mtext(paste("Clustered by skills, seed=",seed))#
}#
dev.off()
pdf("dendro.pdf", height=12, width=8)#
for (seed in 1:2) {#
	set.seed(seed)#
	subset <- sample(1:nrow(ability), size=30)#
	ability_sub <- ability[subset,]#
	distxy <- dist(ability_sub)#
	hClustering <- hclust(distxy, "average")#
	dhc <- as.dendrogram(hClustering)#
	# Rectangular lines#
	ddata <- dendro_data(dhc, type="rectangle")#
	plot(hClustering, hang=0.1, main="Random sample of 30 occupations", #
		cex.lab=0.5)#
	mtext(paste("Clustered by skills, seed=",seed))#
}#
dev.off()
file="x"
paste("~/Desktop/",file,".csv")
paste("~/Desktop/",file,".csv", sep="")
ls
for (file in c("skills", "ability", "knowledge")) {#
	ability <- read.csv(paste("../data/",file,".csv", sep=""))#
	rownames(ability) <- ability[,"Title"]#
	ability <- ability[,c(-1,-2)]#
	for (seed in 1:2) {#
		set.seed(seed)#
		subset <- sample(1:nrow(ability), size=30)#
		ability_sub <- ability[subset,]#
		distxy <- dist(ability_sub)#
		hClustering <- hclust(distxy, "average")#
		dhc <- as.dendrogram(hClustering)#
		# Rectangular lines#
		ddata <- dendro_data(dhc, type="rectangle")#
		plot(hClustering, hang=0.1, main="Random sample of 30 occupations", #
			cex.lab=0.5)#
		mtext(paste("Clustered by skills, seed=",seed))#
	}#
}
pdf("dendro.pdf", height=12, width=8)#
for (file in c("skills", "ability", "knowledge")) {#
	ability <- read.csv(paste("../data/",file,".csv", sep=""))#
	rownames(ability) <- ability[,"Title"]#
	ability <- ability[,c(-1,-2)]#
	for (seed in 1:2) {#
		set.seed(seed)#
		subset <- sample(1:nrow(ability), size=30)#
		ability_sub <- ability[subset,]#
		distxy <- dist(ability_sub)#
		hClustering <- hclust(distxy, "average")#
		dhc <- as.dendrogram(hClustering)#
		# Rectangular lines#
		ddata <- dendro_data(dhc, type="rectangle")#
		plot(hClustering, hang=0.1, main="Random sample of 30 occupations", #
			cex.lab=0.5)#
		mtext(paste("Clustered by skills, seed=",seed))#
	}#
}#
dev.off()
getwd()
pdf("dendro.pdf", height=12, width=8)#
for (file in c("skills", "ability", "knowledge")) {#
	ability <- read.csv(paste("../data/",file,".csv", sep=""))#
	rownames(ability) <- ability[,"Title"]#
	ability <- ability[,c(-1,-2)]#
	for (seed in 1:2) {#
		set.seed(seed)#
		subset <- sample(1:nrow(ability), size=30)#
		ability_sub <- ability[subset,]#
		distxy <- dist(ability_sub)#
		hClustering <- hclust(distxy, "average")#
		dhc <- as.dendrogram(hClustering)#
		# Rectangular lines#
		ddata <- dendro_data(dhc, type="rectangle")#
		plot(hClustering, hang=0.1, main="Random sample of 30 occupations", #
			cex.lab=0.5)#
		mtext(paste("Clustered by", file, " and sampled with seed =",seed))#
	}#
}#
dev.off()
help(cex.lab)
help(par)
pdf("dendro.pdf", height=12, width=8)#
for (file in c("skills", "ability", "knowledge")) {#
	ability <- read.csv(paste("../data/",file,".csv", sep=""))#
	rownames(ability) <- ability[,"Title"]#
	ability <- ability[,c(-1,-2)]#
	for (seed in 1:2) {#
		set.seed(seed)#
		subset <- sample(1:nrow(ability), size=30)#
		ability_sub <- ability[subset,]#
		distxy <- dist(ability_sub)#
		hClustering <- hclust(distxy, "average")#
		dhc <- as.dendrogram(hClustering)#
		# Rectangular lines#
		ddata <- dendro_data(dhc, type="rectangle")#
		plot(hClustering, hang=0.1, #
			main=paste("30 occupations clustered by", file), #
			cex.lab=0.5, cex=0.5)#
		mtext(paste("Randomly sampled with seed =",seed))#
	}#
}#
dev.off()
pdf("dendro.pdf", height=12, width=8)#
for (file in c("skills", "ability", "knowledge")) {#
	ability <- read.csv(paste("../data/",file,".csv", sep=""))#
	rownames(ability) <- ability[,"Title"]#
	ability <- ability[,c(-1,-2)]#
	for (seed in 1:2) {#
		set.seed(seed)#
		subset <- sample(1:nrow(ability), size=30)#
		ability_sub <- ability[subset,]#
		distxy <- dist(ability_sub)#
		hClustering <- hclust(distxy, "average")#
		dhc <- as.dendrogram(hClustering)#
		# Rectangular lines#
		ddata <- dendro_data(dhc, type="rectangle")#
		plot(hClustering, hang=0.1, #
			main=paste("30 O*NET occupations clustered by", file), #
			cex.lab=0.5, cex=0.5)#
		mtext(paste("Randomly sampled with seed =",seed))#
	}#
}#
dev.off()
prettier dendrograms#
myplclust <- function( hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1,...){#
  ## modifiction of plclust for plotting hclust objects *in colour*!#
  ## Copyright Eva KF Chan 2009#
  ## Arguments:#
  ##    hclust:    hclust object#
  ##    lab:        a character vector of labels of the leaves of the tree#
  ##    lab.col:    colour for the labels; NA=default device foreground colour#
  ##    hang:     as in hclust & plclust#
  ## Side effect:#
  ##    A display of hierarchical cluster with coloured leaf labels.#
  y <- rep(hclust$height,2); x <- as.numeric(hclust$merge)#
  y <- y[which(x<0)]; x <- x[which(x<0)]; x <- abs(x)#
  y <- y[order(x)]; x <- x[order(x)]#
  plot( hclust, labels=FALSE, hang=hang, ... )#
  text( x=x, y=y[hclust$order]-(max(hclust$height)*hang),#
        labels=lab[hclust$order], col=lab.col[hclust$order], #
        srt=90, adj=c(1,0.5), xpd=NA, ... )#
}
library(devtools)#
install_github("ggbiplot", "vqv")
install.packages("devtools")
library(devtools)#
install_github("ggbiplot", "vqv")
library(ggbiplot)#
data(wine)#
wine.pca <- prcomp(wine, scale. = TRUE)#
g <- ggbiplot(wine.pca, obs.scale = 1, var.scale = 1, #
              groups = wine.class, ellipse = TRUE, circle = TRUE)#
g <- g + scale_color_discrete(name = '')#
g <- g + opts(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g)
knowledge.pca <- prcomp(ability, scale. = TRUE)
g <- ggbiplot(knowledge.pca, obs.scale = 1, var.scale = 1, #
              groups = wine.class, ellipse = TRUE, circle = TRUE)
g <- ggbiplot(knowledge.pca, obs.scale = 1, var.scale = 1, #
              ellipse = TRUE, circle = TRUE)
g <- g + scale_color_discrete(name = '')#
g <- g + opts(legend.direction = 'horizontal', #
              legend.position = 'top')
g
skill <- read.csv("../data/skills.csv")
library(ggbiplot)#
data(wine)#
wine.pca <- prcomp(wine, scale. = TRUE)#
g <- ggbiplot(wine.pca, obs.scale = 1, var.scale = 1, #
              groups = wine.class, ellipse = TRUE, circle = TRUE)#
g <- g + scale_color_discrete(name = '')#
g <- g + opts(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g)
head(wine)
class(wine)
skill <- read.csv("../data/skills.csv")#
skill.pca <- prcomp(skill, scale. = TRUE)#
g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
              groups = skill.class, ellipse = TRUE, circle = TRUE)#
g <- g + scale_color_discrete(name = '')#
g <- g + opts(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g)
g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
              groups = skill.class, ellipse = TRUE, circle = TRUE)
skill.pca <- prcomp(skill, scale. = TRUE)
skill <- read.csv("../data/skills.csv")#
rownames(skill) <- skill[,2]
skill <- skill[,c(-1,-2)]
skill.pca <- prcomp(skill, scale. = TRUE)
g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
              groups = skill.class, ellipse = TRUE, circle = TRUE)#
g <- g + scale_color_discrete(name = '')#
g <- g + opts(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g)
g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
              groups = skill.class, ellipse = TRUE, circle = TRUE)
wine.class
g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
              ellipse = TRUE, circle = TRUE) #groups = skill.class, #
g <- g + scale_color_discrete(name = '')#
g <- g + opts(legend.direction = 'horizontal', #
              legend.position = 'top')
print(g)
g + theme_bw()
skill <- read.csv("../data/ability.csv")#
rownames(skill) <- skill[,2]#
skill <- skill[,c(-1,-2)]#
skill.pca <- prcomp(skill, scale. = TRUE)#
g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
              ellipse = TRUE, circle = TRUE) #groups = skill.class, #
g <- g + scale_color_discrete(name = '')#
g <- g + opts(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g + theme_bw())
help(ggbiplot)
help(prcomp)
ggbiplot(skill.pca)
ggbiplot(skill.pca, obs.scale=1)
g <- g + theme(legend.direction = 'horizontal', #
              legend.position = 'top')
print(g + theme_bw())
help(ggbiplot)
ggbiplot(skill.pca, obs.scale=1, pc.biplot=T)
ggbiplot(skill.pca, obs.scale=1, pc.biplot=T, alpha=0.1)
ggbiplot(skill.pca, obs.scale=1, alpha=0.1) + theme_bw()
ggbiplot(skill.pca, obs.scale=1, alpha=0.1)
g <- ggbiplot(skill.pca, obs.scale=1, alpha=0.1)
g <- g + scale_color_discrete(name = '')#
g <- g + theme(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g + theme_bw())
g <- ggbiplot(skill.pca, var.scale=1, alpha=0.1)#
g <- g + scale_color_discrete(name = '')#
g <- g + theme(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g + theme_bw())
g <- ggbiplot(skill.pca, obs.scale=1, alpha=0.1)#
g <- g + scale_color_discrete(name = '')#
g <- g + theme(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g + theme_bw())
pdf("pca.pdf")#
skill <- read.csv("../data/ability.csv")#
rownames(skill) <- skill[,2]#
skill <- skill[,c(-1,-2)]#
skill.pca <- prcomp(skill, scale. = TRUE)#
#g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
#              ellipse = TRUE, circle = TRUE) #groups = skill.class, #
g <- ggbiplot(skill.pca, obs.scale=1, alpha=0.1)#
g <- g + scale_color_discrete(name = '')#
g <- g + theme(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g + theme_bw())#
dev.off()
pdf("pca.pdf")#
skill <- read.csv("../data/knowledge.csv")#
rownames(skill) <- skill[,2]#
skill <- skill[,c(-1,-2)]#
skill.pca <- prcomp(skill, scale. = TRUE)#
#g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
#              ellipse = TRUE, circle = TRUE) #groups = skill.class, #
g <- ggbiplot(skill.pca, obs.scale=1, alpha=0.1)#
g <- g + scale_color_discrete(name = '')#
g <- g + theme(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g + theme_bw())#
dev.off()
pdf("pca.pdf")#
skill <- read.csv("../data/knowledge.csv")#
rownames(skill) <- skill[,2]#
skill <- skill[,c(-1,-2)]#
skill.pca <- prcomp(skill, scale. = TRUE)#
#g <- ggbiplot(skill.pca, obs.scale = 1, var.scale = 1, #
#              ellipse = TRUE, circle = TRUE) #groups = skill.class, #
g <- ggbiplot(skill.pca, obs.scale=1, alpha=0.1)#
g <- g + scale_color_discrete(name = '')#
g <- g + theme(legend.direction = 'horizontal', #
              legend.position = 'top')#
print(g + theme_bw())#
#dev.off()
heatmap(skill)
heatmap(as.matrix(skill))
help(heatmap)
heatmap(as.matrix(skill[sample(1:nrow(skill), 200)]))
heatmap(as.matrix(skill[sample(1:nrow(skill), 200),]))
heatmap(as.matrix(skill[sample(1:nrow(skill), 100),]))
pdf("heatmap.pdf",height=24,width=16)
heatmap(as.matrix(skill[sample(1:nrow(skill), 100),]))
dev.off()
